@charset "UTF-8";
/*
  SCSS Reset
*/
/**
 * modified version of eric meyer's reset 2.0
 * http://meyerweb.com/eric/tools/css/reset/
 */
/**
 * basic reset
 */a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,html,i,iframe,img,ins,kbd,label,legend,li,main,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}
/**
 * HTML5 display-role reset for older browsers
 */article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}
/**
 * modified version of normalize.css 3.0.2
 * http://necolas.github.io/normalize.css/
 */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-tap-highlight-color:transparent}
/**
 * HTML5 display definitions
 * =============================================================================
 */
/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */audio,canvas,progress,video{display:inline-block;vertical-align:baseline}
/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */audio:not([controls]){display:none;height:0}
/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */[hidden],template{display:none}
/**
 * Links
 * =============================================================================
 */
/**
 * Remove the gray background color from active links in IE 10.
 */a{background-color:transparent}
/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */a:active,a:hover{outline:0}
/**
 * Text-level semantics
 * =============================================================================
 */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */abbr[title]{border-bottom:1px dotted;cursor:help}
/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */b,strong{font-weight:700}
/**
 * 1. Address styling not present in Safari and Chrome.
 * 2. Set previously resetted italic font-style
 */dfn,em,i{font-style:italic}
/**
 * Address styling not present in IE 8/9.
 */mark{background:#ff0;color:#000}
/**
 * Address inconsistent and variable font size in all browsers.
 */small{font-size:80%}
/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */sub,sup{font-size:75%;line-height:0;position:relative}sup{top:-.5em}sub{bottom:-.25em}
/**
 * Embedded content
 * =============================================================================
 */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */img{border:0}
/**
 * Correct overflow not hidden in IE 9/10/11.
 */svg:not(:root){overflow:hidden}
/**
 * Grouping content
 * =============================================================================
 */
/**
 * Address differences between Firefox and other browsers.
 */hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}
/**
 * Contain overflow in all browsers.
 */pre{overflow:auto}
/**
 * Address odd `em`-unit font size rendering in all browsers.
 */code,kbd,pre,samp{font-family:monospace,monospace}
/**
 * Forms
 * =============================================================================
 */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}
/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */button{overflow:visible}
/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */button,select{text-transform:none}
/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}
/**
 * Re-set default cursor for disabled elements.
 */button[disabled],html input[disabled]{cursor:default}
/**
 * Remove inner padding and border in Firefox 4+.
 */button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}
/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */input{line-height:normal}
/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}
/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}
/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */input[type=search]{-webkit-appearance:none}
/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}
/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */textarea{overflow:auto}
/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */optgroup{font-weight:700}
/**
 * responsive viewport
 */@-ms-viewport{width:device-width}@-o-viewport{width:device-width}@viewport{width:device-width}
/**
 * inherit box model
 */*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}
/**
 * iOS "clickable elements" fix for role="button"
 *
 * Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
 * for traditionally non-focusable elements with role="button"
 * see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile
 */[role=button]{cursor:pointer}
/**
 * Avoid 300ms click delay on touch devices that support the `touch-action` CSS property.
 *
 * In particular, unlike most other browsers, IE11+Edge on Windows 10 on touch devices and IE Mobile 10-11
 * DON'T remove the click delay when `<meta name="viewport" content="width=device-width">` is present.
 * However, they DO support removing the click delay via `touch-action: manipulation`.
 * See:
 * - http://v4-alpha.getbootstrap.com/content/reboot/#click-delay-optimization-for-touch
 * - http://caniuse.com/#feat=css-touch-action
 * - http://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay
 */[role=button],a,area,button,input,label,select,summary,textarea{-ms-touch-action:manipulation;touch-action:manipulation}
/**
 * Always hide an element with the `hidden` HTML attribute (from PureCSS).
 */[hidden]{display:none!important}
/*
  Functions & Mixins
*/
/*
  Directives
  ---------------------

  Table of Contents:

   1. Color Variations function
   2. Gradient mixin
   3. Chart Series Colors function
   4. Breakpoints mixin
   5. String Replacement function
   6. Font Face Declaration mixin
   7. State Colors mixins
   8. Power function
   9. Modular Scale Typography function
  10. Max-Width mixin
  11. Grid Builder mixin
  12. Link Underline mixin
*/
/*
   1. Color Variations function

      color($key, $luminosity, $alpha)

      Uses the $colors list as defined in _settings.scss (@section 1a).

      The color() function takes three parameters, only the first of which is required. You must
      pass in the color name ($key) - this will render the base color:

        color(blue) - will render the BASE blue, equivalent to #3871c7 or rgba(56, 113, 199, 1)

      You may pass in an optional brightness variable ($luminosity), which can be any percentage,
      though it is recommended to use only multiples of ten: 10, 20, 30 ... 80, 90. The higher
      the number, the brighter the color:

        color(blue, 20) - will render a very DARK blue, equivalent to #162d50 or
                          rgba(56, 113, 199, 1)
        color(blue, 50) - will render the BASE blue, equivalent to #3871c7 or
                          rgba(56, 113, 199, 1)
        color(blue, 80) - will render a very LIGHT blue, equivalent to #afc6e9 or
                          rgba(56, 113, 199, 1)

      color(black) and color(white) are special cases in that their brightness is set by
      definition and cannot be adjusted:

        color(black) - is the same as color(grey, 0), equivalent to #000000 or
                       rgba(0, 0, 0, 1)
        color(white) - is the same as color(grey, 100), equivalent to #ffffff or
                       rgba(255, 255, 255, 1)

      You may pass in an optional opacity variable ($alpha), which can be any percentage, though
      it is recommended to use only multiples of ten: 10, 20, 30 ... 80, 90. If you want to use
      $alpha, you MUST also pass a $luminosity — it is recommended to always pass 50 so that you
      are creating only transparent versions of the BASE color. The higher the number, the more
      opaque the color:

        color(blue, 50, 20) -  will render a NEARLY TRANSPARENT base blue, equivalent to
                               rgba(56, 113, 199, 0.2)
        color(blue, 50, 50) -  will render a HALF TRANSPARENT base blue, equivalent to
                               rgba(56, 113, 199, 0.5)
        color(blue, 50, 100) - will render a COMPLETELY OPAQUE base blue, equivalent to
                               rgba(56, 113, 199, 1)

      Unlike brightness, opacity CAN be set on color(black) and color(white):

        color(black, 0, 20) -   will render a NEARLY TRANSPARENT black equivalent to
                                rgba(0, 0, 0, 0.2)
        color(white, 100, 50) - will render a HALF TRANSPARENT white, equivalent to
                                rgba(255, 255, 255, 0.5)
*/
/*
   2. Gradient mixin

      gradient($color1, $color2, $color3)

      The gradient() mixin takes up to three parameters, the first of which is a direction, and
      the others of which are color names defined in $colors list in _settings.scss (@section 1a).
      The mixin returns a linear gradient as a background-image using the color(s) pased.

      The direction is the direction where your gradient will go. The possible directions are:
      top, bottom, left, right, top left, top right, bottom left, bottom right.

      If you pass a single color, the mixin will return a gradient from luminosity 30 to
      luminosity 70.

      If you pass two colors, the mixin will return a gradient from one to the other, both with
      luminosity 50.
*/
/*
   3. Chart Series Colors function

      chart-series($series)

      Uses the $chart-series list as defined in _settings.scss (@section 1b).

      The chart-series() function takes a single required parameter. You must pass in the size
      name ($series) - this will render the chart color for the named series:

        chart-series(0) - will render the color of the first series
        chart-series(1) - will render the color of the second series
        ...
        chart-series(11) - will render the color of the ninth series
*/
/*
   4. Breakpoints mixin

      @include breakpoint($point)

      The breakpoint() function takes a single required parameter. You must pass in the breakpoint
      name or a number ($point). If a breakpoint name is passed, the $breakpoints list as
      defined in _settings.scss (@section 3) is used for a mininum-width. If a number is passed,
      that number of pixels is used as a minimum-width.

      Ithis will cause any styles between the {} brackets to be applied only to
      screen sizes wider than the breakpoint passed:

      @include breakpoint(m) {
        font-size: 18px;
      }

      ...will set the font-size to '18px' on any screen larger than the medium breakpoint size.

      @include breakpoint(1024) {
        font-weight: bold;
      }

      ...will set the font-weight to 'bold' on any screen larger than 1024 pixels wide.
*/
/*
   5. String Replacement function

      str-replace($string, $search, $replace)

      The str-replace() function takes three parameters, the first two of which are required. You
      must pass the text to be modified ($string) and the text you want to replace ($search). The
      third (optional) parameter is the text you want to insert in place of the $search text
      ($replace). If the $replace parameter is not passed, the $search text will simply be
      removed. For example:

      .selector {
        $string: 'The answer to life, the universe and everything is blah.';
        content: str-replace($string, 'blah', '42');
      }

      ...will compile to the following CSS...

      .selector {
        content: 'The answer to life, the universe and everything is 42.';
      }

      This function is used in the Font Face Declaration mixin defined and documented in
      _directives.scss (@section 6).
*/
/*
   6. Font Face Declaration mixin

      fontdef($family, $type, $weight, $style, $stretch)

      Uses the $font-families list as defined in _settings.scss (@section 5a).

      The fontdef() mixin takes five parameters, the first two of which are required. You must pass
      the font family name ($family) and font variant name ($variant) to generate a @font-face
      definition.

      You can also pass an optional $weight [normal | 100 | 200 | ... | 800 | 900], $style
      [normal | italic], and $stretch [normal | ultra-condensed | extra-condensed | condensed |
      semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded]. The optional
      variables will all default to 'normal' if they are not passed. The $stretch variable is
      currently not used in our design system, but is available for potential future use.

      For example:

      @include font-def(Fira Sans Condensed, semibolditalic, 600, italic, normal);

      ...will compile to the following CSS...

      @font-face {
        font-family: 'Fira Sans Condensed';
        src: url('../fonts/firasanscondensed-semibolditalic.woff') format('woff');
        font-weight: 600;
        font-style: italic;
        font-stretch: normal;
      }

      This function is used to generate @font-face declarations in _fonts.scss.
*/
/*
   7. State Colors mixins

      state-error()
      state-info()
      state-neutral()
      state-success()
      state-warning()

      Include these to use standard state colors (border-color, background-color, color) on an element.
*/
/*
   8. Power function

      pow($number, $exponent)
*/
/*
   9. Modular Scale Typography function

      ms($factor)
*/
/*
  10. Max-Width mixin

      constrained($max-width)
*/
/*
  11. Grid Builder mixin

      build-grid()
*/
/*
  12. Link Underline mixin

      link-underline($color)
*/
/*
  Settings
*/
/*
  IT Dashboard Settings
  ---------------------

  Table of Contents:

   1. Colors
      a. Base Colors
      b. Theme Colors
      c. Chart Series Colors
   2. Typography
      a. Font Face Generation Settings
      b. Font Stacks
      c. Font Weights
      d. Font Sizes
      e. Line Heights
   3. Spacing
   4. Borders
   5. The Grid
   6. Off-Canvas
   7. Visualizations
   8. Transitions
   9. Shadows
*/
/*
   1. Colors

   a. Base Colors
      Reference colors in CSS using the color() function defined and documented in
      assets/styles/modules/_directives.scss (@section 1).
*/
/*
   b. Theme Colors
*/
/*
   c. Chart Series Colors
      Reference colors in CSS using the chart-series() function defined and documented in
      assets/styles/modules/_directives.scss (@section 4).
*/
/*
   2. Typography

   a. Font Face Generation Settings
      Settings used to generate @font-face declarations in fonts.scss and using the font-def()
      function defined and documented in assets/styles/modules/_directives.scss (@section 6).
*/
/*
   b. Font Stacks
      Source Sans Pro - http://www.adobe.com/products/type/font-information/Source-Sans-Pro-Readme-file.html
      Source Sans Pro was designed by Paul D. Hunt under the guidance of Robert Slimbach. It was
      Adobe's first open source typeface family, conceived primarily as a typeface for user
      interfaces. Source Sans Pro draws inspiration from the clarity and legibility of twentieth-
      century American gothic typeface designs.

      Trend Sans One - http://www.latinotype.com/display-weights?font=102
      Trend was designed by Daniel Hernández and Paula Nazal Selaive of Latinotype. Trend is a font
      made of layers, taking as a basis a sans and a slab font. It is the result of observation,
      search and study of the latest global trends. Trend tries to capture the aesthetics of
      fashion or even fashion itself, integrating elements of a very popular and current trend.
*/
/*
   c. Font Weights
      We use the Light (300) weight as a base, and the Semi-Bold (600) sparingly for headers
      and emphasis.
*/
/*
   d. Font Sizes
      Defined here are the available font sizes.
*/
/*
   e. Line Heights
*/
/*
   3. Spacing
*/
/*
   4. Borders
*/
/*
   5. The Grid
      Settings related to the overall page grid.
*/
/*
   6. Off-Canvas
*/
/*
   7. Visualizations
*/
/*
   8. Transitions
*/
/*
   9. Shadows
*/
/*
  Global Styles
*/html{font-size:20px;height:100vh}body{background-color:#fff;color:#171a1c;font-family:Source Sans Pro,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-size:1rem;font-weight:300;line-height:1.4;min-height:100vh;position:relative}body>app-root{display:grid;grid-template-areas:"nav" "main";grid-template-rows:auto auto}@media (min-width:1200px){body>app-root{grid-template-areas:"nav main";grid-template-columns:15% 1fr;min-height:100vh}}::selection{background-color:#ae1e4e;color:#fff;text-shadow:0}::-moz-selection{background-color:#ae1e4e;color:#fff;text-shadow:0}a{background-image:-webkit-gradient(linear,left bottom,left top,color-stop(0,#8ad),to(#8ad));background-image:linear-gradient(0deg,#8ad 0,#8ad);color:inherit;cursor:pointer;text-decoration:none;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.on-dark a,a{background-position:0 1.15em;background-repeat:repeat-x}.on-dark a{background-image:-webkit-gradient(linear,left bottom,left top,color-stop(0,#608ed2),to(#608ed2));background-image:linear-gradient(0deg,#608ed2 0,#608ed2)}.on-light a{background-image:-webkit-gradient(linear,left bottom,left top,color-stop(0,#8ad),to(#8ad));background-image:linear-gradient(0deg,#8ad 0,#8ad);background-position:0 1.15em;background-repeat:repeat-x}a:active,a:focus,a:hover{color:#3871c7}.on-dark a:active,.on-dark a:focus,.on-dark a:hover{color:#afc6e9}.on-light a:active,.on-light a:focus,.on-light a:hover{color:#3871c7}a[href$=".pdf"]:after,a[href^="http://"]:after,a[href^="https://"]:after,a[href^=mailto]:after{background-image:url(/cpicAngular/assets/images/svg/icons/link-external.svg);background-repeat:no-repeat;background-position:100% 80%;background-size:.5rem;content:"";display:inline-block;height:.75rem;width:.75rem}.on-dark a[href$=".pdf"]:after,.on-dark a[href^="http://"]:after,.on-dark a[href^="https://"]:after,.on-dark a[href^=mailto]:after{background-image:url(/cpicAngular/assets/images/svg/icons/link-external-dark.svg)}.on-light a[href$=".pdf"]:after,.on-light a[href^="http://"]:after,.on-light a[href^="https://"]:after,.on-light a[href^=mailto]:after{background-image:url(/cpicAngular/assets/images/svg/icons/link-external.svg)}a[href^="mailto:"]:after{background-image:url(/cpicAngular/assets/images/svg/icons/link-email.svg)}.on-dark a[href^="mailto:"]:after{background-image:url(/cpicAngular/assets/images/svg/icons/link-email-dark.svg)}.on-light a[href^="mailto:"]:after{background-image:url(/cpicAngular/assets/images/svg/icons/link-email.svg)}a path,a polygon,a rect{fill:currentColor}app-content{-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;display:grid}app-content section>div>:last-child{margin-bottom:0}.button,button{display:inline-block;padding:.5em;border:1px solid #8f99a3;border-radius:0;background-color:#e3e6e8;color:#454d54;line-height:1;text-decoration:none;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.button:active,.button:focus,.button:hover,button:active,button:focus,button:hover{background-color:#ae1e4e;color:#fff}.button.button-centered,button.button-centered{display:block;margin:1rem auto}.button.button-s,button.button-s{font-size:.83333333rem}.button.button-close,button.button-close{padding:.25rem;border:0;color:#fff}.button.button-ghost,button.button-ghost{background-color:transparent;color:inherit}.button.button-ghost:active,.button.button-ghost:focus,.button.button-ghost:hover,button.button-ghost:active,button.button-ghost:focus,button.button-ghost:hover{background-color:#ae1e4e;color:#fff}.button.button-primary,button.button-primary{border-color:transparent;background-color:#162d50;color:#fff}.button.button-primary:active,.button.button-primary:focus,.button.button-primary:hover,button.button-primary:active,button.button-primary:focus,button.button-primary:hover{background-color:#ae1e4e;color:#fff}.button.button-transparent,button.button-transparent{border-color:transparent;background-color:transparent;color:inherit}h1,h2,h3,h4,h5,h6{margin:0 0 1rem;color:#247;font-weight:300;line-height:1.25}h1.major,h2.major,h3.major,h4.major,h5.major,h6.major{color:inherit;font-family:Trend Sans One,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;text-align:center;text-transform:uppercase}h1.hr,h2.hr,h3.hr,h4.hr,h5.hr,h6.hr{border-image-source:linear-gradient(90deg,rgba(115,128,140,0) 0,#73808c 50%,rgba(115,128,140,0));border-image-slice:1;border-style:solid;border-top-width:1px;margin-top:1rem;padding-top:2rem}.on-dark h1,.on-dark h2,.on-dark h3,.on-dark h4,.on-dark h5,.on-dark h6{color:#afc6e9}.on-dark h1.major,.on-dark h2.major,.on-dark h3.major,.on-dark h4.major,.on-dark h5.major,.on-dark h6.major{color:inherit}.on-dark h1.hr,.on-dark h2.hr,.on-dark h3.hr,.on-dark h4.hr,.on-dark h5.hr,.on-dark h6.hr{border-image-source:linear-gradient(90deg,hsla(0,0%,100%,0) 0,hsla(0,0%,100%,.5) 50%,hsla(0,0%,100%,0))}.on-light h1,.on-light h2,.on-light h3,.on-light h4,.on-light h5,.on-light h6{color:#247}.on-light h1.major,.on-light h2.major,.on-light h3.major,.on-light h4.major,.on-light h5.major,.on-light h6.major{color:inherit}.on-light h1.hr,.on-light h2.hr,.on-light h3.hr,.on-light h4.hr,.on-light h5.hr,.on-light h6.hr{border-image-source:linear-gradient(90deg,hsla(0,0%,100%,0) 0,hsla(0,0%,100%,.5) 50%,hsla(0,0%,100%,0))}.h1,h1{font-size:2.48832rem}.h1.major,h1.major{font-size:1.728rem}@media (min-width:600px){.h1.major,h1.major{font-size:2.48832rem}}.h2,h2{font-size:2.0736rem}.h3,h3{font-size:1.728rem}.h4,h4{font-size:1.44rem}.h5,h5{font-size:1.2rem}.h6,h6{font-size:1rem}label{cursor:pointer}main article{display:grid;grid-template-areas:"component" "detail";grid-template-columns:auto;min-height:100vh}@media (min-width:800px){main article{grid-template-areas:"component detail";grid-template-columns:50% 50%;min-height:100vh}}main article>section{padding:1rem}main article>aside{background-color:#2d5b9f;color:#fff;padding:1rem}p,table{margin-bottom:1rem}p:last-child,table:last-child{margin-bottom:0}svg{position:absolute;height:100%;width:100%;left:0;top:0}ul{padding-left:1.75rem}ul:last-child li:last-child{margin-bottom:0}ul li{margin:0 0 .5rem;list-style:square}ul.clean{padding:0}ul.clean li{list-style:none;margin:0}.alt{font-family:Trend Sans One,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif}.asterisk{text-align:center}.asterisk span{position:relative;top:-.125em;font-size:.83333333rem;font-style:italic}.banner{background-color:#fff}.banner h1,.banner h2,.banner h3,.banner h4,.banner h5,.banner h6{font-size:1.2rem;font-weight:600;margin-bottom:.5rem}.banner ul{padding-left:1rem}.button-close{position:relative;top:-.5rem;right:-.5rem;min-width:1.25em;background-color:transparent;font-size:1.44rem}.constrained{margin-left:auto;margin-right:auto;max-width:1200px;width:100%}.info{background-color:#d7e3f4;color:#171a1c}.inline-subhead{display:inline-block;font-size:.6em;font-style:italic;line-height:2.5;margin-left:1rem}.knockout{background-color:#e3e6e8;text-decoration:none}.on-dark{background-color:#162d50;color:#fff}.on-dark.on-dark-alt{background-color:#247}.padded{padding:1rem}.padded-left-right{padding-left:1rem;padding-right:1rem}.padded-top-bottom{padding-bottom:1rem;padding-top:1rem}.padded-top{padding-top:1rem}.padded-right{padding-right:1rem}.padded-bottom{padding-bottom:1rem}.padded-left{padding-left:1rem}.read-more{max-height:99rem;overflow:hidden;-webkit-transition:max-height .3s ease-in-out;transition:max-height .3s ease-in-out}.read-more.read-more-hidden{max-height:0}.svg-wrapper{position:relative}.table{width:100%}.table tbody th{text-align:center;vertical-align:middle;white-space:nowrap}.table thead{vertical-align:bottom}.table td,.table th{padding:.25rem}.table td:first-child,.table th:first-child{padding-left:0}.table td:last-child,.table th:last-child{padding-right:0}.table th{font-weight:600;text-align:left}.table-bordered td,.table-bordered th{border:1px solid rgba(22,45,80,.3)}.table-responsive td,.table-responsive th{display:block;padding:.25rem!important;word-break:break-word}.table-responsive th{border-bottom-width:0;margin-top:.5rem}@media (min-width:600px){.table-responsive td,.table-responsive th{display:table-cell}.table-responsive td:first-child,.table-responsive th:first-child{padding-left:0}.table-responsive td:last-child,.table-responsive th:last-child{padding-right:0}.table-responsive th{border-bottom-width:1px}}.tag{display:inline-block;position:relative;top:-1px;margin-bottom:-4px;padding:.125rem .25rem;border:1px solid rgba(22,45,80,.3);border-radius:0;font-size:.83333333rem;font-weight:300;line-height:1}.text-center{display:block;text-align:center}.text-left{display:block;text-align:left}.text-right{display:block;text-align:right}.text-s{font-size:.83333333rem}.video-wrapper{margin:0 auto;max-width:30rem}.video-wrapper>div{height:0;padding-bottom:56.25%;padding-top:25px;position:relative}.video-wrapper>div>object{height:100%;left:0;position:absolute;top:0;width:100%}.visually-hidden{height:1px;left:-9999rem;overflow:hidden;position:absolute;top:auto;width:1px}.ggap1>article{grid-column-gap:1px;grid-row-gap:1px}.ggap1>article>section{padding:1rem}.ggap1>article>section.spacer{padding:.25rem}.blue2{background-color:#247}.blue3{background-color:#2d5b9f}
/*
  Grid
*/.grid{display:grid;grid-template-rows:auto}.grid>*{grid-area:span 1/span 12}.grid-gap-col{grid-column-gap:1rem}.grid-gap-row{grid-row-gap:1rem}@media (min-width:400px){.grid{grid-template-columns:repeat(12,1fr)}.grid .g-xs-1{grid-area:span 1/span 1}.grid .g-xs-2{grid-area:span 1/span 2}.grid .g-xs-3{grid-area:span 1/span 3}.grid .g-xs-4{grid-area:span 1/span 4}.grid .g-xs-5{grid-area:span 1/span 5}.grid .g-xs-6{grid-area:span 1/span 6}.grid .g-xs-7{grid-area:span 1/span 7}.grid .g-xs-8{grid-area:span 1/span 8}.grid .g-xs-9{grid-area:span 1/span 9}.grid .g-xs-10{grid-area:span 1/span 10}.grid .g-xs-11{grid-area:span 1/span 11}.grid .g-xs-12{grid-area:span 1/span 12}}@media (min-width:600px){.grid{grid-template-columns:repeat(12,1fr)}.grid .g-s-1{grid-area:span 1/span 1}.grid .g-s-2{grid-area:span 1/span 2}.grid .g-s-3{grid-area:span 1/span 3}.grid .g-s-4{grid-area:span 1/span 4}.grid .g-s-5{grid-area:span 1/span 5}.grid .g-s-6{grid-area:span 1/span 6}.grid .g-s-7{grid-area:span 1/span 7}.grid .g-s-8{grid-area:span 1/span 8}.grid .g-s-9{grid-area:span 1/span 9}.grid .g-s-10{grid-area:span 1/span 10}.grid .g-s-11{grid-area:span 1/span 11}.grid .g-s-12{grid-area:span 1/span 12}}@media (min-width:800px){.grid{grid-template-columns:repeat(12,1fr)}.grid .g-m-1{grid-area:span 1/span 1}.grid .g-m-2{grid-area:span 1/span 2}.grid .g-m-3{grid-area:span 1/span 3}.grid .g-m-4{grid-area:span 1/span 4}.grid .g-m-5{grid-area:span 1/span 5}.grid .g-m-6{grid-area:span 1/span 6}.grid .g-m-7{grid-area:span 1/span 7}.grid .g-m-8{grid-area:span 1/span 8}.grid .g-m-9{grid-area:span 1/span 9}.grid .g-m-10{grid-area:span 1/span 10}.grid .g-m-11{grid-area:span 1/span 11}.grid .g-m-12{grid-area:span 1/span 12}}@media (min-width:1200px){.grid{grid-template-columns:repeat(12,1fr)}.grid .g-l-1{grid-area:span 1/span 1}.grid .g-l-2{grid-area:span 1/span 2}.grid .g-l-3{grid-area:span 1/span 3}.grid .g-l-4{grid-area:span 1/span 4}.grid .g-l-5{grid-area:span 1/span 5}.grid .g-l-6{grid-area:span 1/span 6}.grid .g-l-7{grid-area:span 1/span 7}.grid .g-l-8{grid-area:span 1/span 8}.grid .g-l-9{grid-area:span 1/span 9}.grid .g-l-10{grid-area:span 1/span 10}.grid .g-l-11{grid-area:span 1/span 11}.grid .g-l-12{grid-area:span 1/span 12}}@media (min-width:1600px){.grid{grid-template-columns:repeat(12,1fr)}.grid .g-xl-1{grid-area:span 1/span 1}.grid .g-xl-2{grid-area:span 1/span 2}.grid .g-xl-3{grid-area:span 1/span 3}.grid .g-xl-4{grid-area:span 1/span 4}.grid .g-xl-5{grid-area:span 1/span 5}.grid .g-xl-6{grid-area:span 1/span 6}.grid .g-xl-7{grid-area:span 1/span 7}.grid .g-xl-8{grid-area:span 1/span 8}.grid .g-xl-9{grid-area:span 1/span 9}.grid .g-xl-10{grid-area:span 1/span 10}.grid .g-xl-11{grid-area:span 1/span 11}.grid .g-xl-12{grid-area:span 1/span 12}}
/*
  Fonts
*/@font-face{font-family:Source Sans Pro;src:url(sourcesanspro-light.ccd558990012aadae060.woff2) format("woff2"),url(sourcesanspro-light.7d901d6001e12e3fd365.woff) format("woff");font-weight:300;font-style:normal;font-stretch:normal}@font-face{font-family:Source Sans Pro;src:url(sourcesanspro-lightitalic.41e68a7511a38635942b.woff2) format("woff2"),url(sourcesanspro-lightitalic.8991e3bb0c2411f59090.woff) format("woff");font-weight:300;font-style:italic;font-stretch:normal}@font-face{font-family:Source Sans Pro;src:url(sourcesanspro-semibold.862a68789b556da5aa84.woff2) format("woff2"),url(sourcesanspro-semibold.99f66ff4eab8123edcaa.woff) format("woff");font-weight:600;font-style:normal;font-stretch:normal}@font-face{font-family:Source Sans Pro;src:url(sourcesanspro-semibolditalic.70929fb8f46b488f5c95.woff2) format("woff2"),url(sourcesanspro-semibolditalic.fe3cbd07b27e040cff73.woff) format("woff");font-weight:600;font-style:italic;font-stretch:normal}@font-face{font-family:Trend Sans One;src:url(trendsansone-normal.3e7441f3d4907baa0eec.woff2) format("woff2"),url(trendsansone-normal.fdcf008d999cbd9d80ff.woff) format("woff")}